diff --git a/gst/vaapi/gstvaapisink.c b/gst/vaapi/gstvaapisink.c
index 964dcdf..e14bded 100644
--- a/gst/vaapi/gstvaapisink.c
+++ b/gst/vaapi/gstvaapisink.c
@@ -171,10 +171,12 @@ enum {
     PROP_USE_REFLECTION,
     PROP_ROTATION,
     PROP_FORCE_ASPECT_RATIO,
+    PROP_RENDER_MODE,
 };
 
 #define DEFAULT_DISPLAY_TYPE            GST_VAAPI_DISPLAY_TYPE_ANY
 #define DEFAULT_ROTATION                GST_VAAPI_ROTATION_0
+#define DEFAULT_RENDER_MODE             GST_VAAPI_RENDER_MODE_TEXTURE
 
 /* GstVideoOverlay interface */
 
@@ -697,6 +699,32 @@ error_pool_config:
 }
 
 static gboolean
+gst_vaapisink_ensure_render_mode(GstVaapiSink *sink)
+{
+    gboolean success = FALSE;
+
+    g_return_val_if_fail(sink->display, FALSE);
+
+    // Use render_mode_req here, instead of check render_mode with use_overlay.
+    // in case there is more render mode define in the future
+    if (sink->render_mode == sink->render_mode_req)
+        return TRUE;
+
+    gst_vaapi_display_lock(sink->display);
+    success = gst_vaapi_display_set_render_mode(sink->display, sink->render_mode_req);
+    gst_vaapi_display_unlock(sink->display);
+    if (!success) {
+        GST_ERROR("failed to change VA display render mode");
+        goto end;
+    }
+    success = TRUE;
+
+end:
+    sink->render_mode = sink->render_mode_req;
+    return success;
+}
+
+static gboolean
 gst_vaapisink_start(GstBaseSink *base_sink)
 {
     GstVaapiSink * const sink = GST_VAAPISINK(base_sink);
@@ -805,6 +833,7 @@ gst_vaapisink_set_caps(GstBaseSink *base_sink, GstCaps *caps)
 #endif
 
     gst_vaapisink_ensure_rotation(sink, FALSE);
+    gst_vaapisink_ensure_render_mode(sink);
 
     gst_vaapisink_ensure_window_size(sink, &win_width, &win_height);
     if (sink->window) {
@@ -1195,7 +1224,9 @@ gst_vaapisink_show_frame(GstBaseSink *base_sink, GstBuffer *src_buffer)
     if (!sink->window)
         goto error;
 
+    // TODO, we'd better do it in _set_property to avoid check it each time.
     gst_vaapisink_ensure_rotation(sink, TRUE);
+    gst_vaapisink_ensure_render_mode(sink);
 
     surface = gst_vaapi_video_meta_get_surface(meta);
     if (!surface)
@@ -1411,6 +1442,9 @@ gst_vaapisink_set_property(
     case PROP_FORCE_ASPECT_RATIO:
         sink->keep_aspect = g_value_get_boolean(value);
         break;
+    case PROP_RENDER_MODE:
+        sink->render_mode_req = g_value_get_enum(value);
+        break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);
         break;
@@ -1449,6 +1483,9 @@ gst_vaapisink_get_property(
     case PROP_FORCE_ASPECT_RATIO:
         g_value_set_boolean(value, sink->keep_aspect);
         break;
+    case PROP_RENDER_MODE:
+        g_value_set_enum(value, sink->render_mode);
+        break;
     default:
         G_OBJECT_WARN_INVALID_PROPERTY_ID(object, prop_id, pspec);
         break;
@@ -1526,6 +1563,21 @@ gst_vaapisink_class_init(GstVaapiSinkClass *klass)
                               G_PARAM_READWRITE));
 #endif
 
+    /**
+     * GstVaapiSink:render-mode:
+     *
+     * The VA display render mode, expressed as a #GstVaapiRenderMode.
+     */
+    g_object_class_install_property
+        (object_class,
+         PROP_RENDER_MODE,
+         g_param_spec_enum(GST_VAAPI_DISPLAY_PROP_RENDER_MODE,
+                           "render-mode",
+                           "The display render mode (overlay or texture-blit)",
+                           GST_VAAPI_TYPE_RENDER_MODE,
+                           DEFAULT_RENDER_MODE,
+                           G_PARAM_READWRITE | G_PARAM_STATIC_STRINGS));
+
     g_object_class_install_property
         (object_class,
          PROP_FULLSCREEN,
@@ -1601,6 +1653,8 @@ gst_vaapisink_init(GstVaapiSink *sink)
     sink->display_type   = DEFAULT_DISPLAY_TYPE;
     sink->rotation       = DEFAULT_ROTATION;
     sink->rotation_req   = DEFAULT_ROTATION;
+    sink->render_mode    = DEFAULT_RENDER_MODE;
+    sink->render_mode_req= DEFAULT_RENDER_MODE;
     sink->use_reflection = FALSE;
     sink->use_overlay    = FALSE;
     sink->use_rotation   = FALSE;
diff --git a/gst/vaapi/gstvaapisink.h b/gst/vaapi/gstvaapisink.h
index fe2bf14..e7cc355 100644
--- a/gst/vaapi/gstvaapisink.h
+++ b/gst/vaapi/gstvaapisink.h
@@ -91,6 +91,8 @@ struct _GstVaapiSink {
     GstVaapiRectangle   display_rect;
     GstVaapiRotation    rotation;
     GstVaapiRotation    rotation_req;
+    GstVaapiRenderMode  render_mode;
+    GstVaapiRenderMode  render_mode_req;
     guint               foreign_window  : 1;
     guint               fullscreen      : 1;
     guint               synchronous     : 1;
