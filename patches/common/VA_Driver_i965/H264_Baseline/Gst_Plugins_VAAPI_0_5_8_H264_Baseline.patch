h264 dec: add more checks from pps for hardware profile

 From 655c3a30351d837d98db1db78d0b0a27958c98df Mon Sep 17 00:00:00 2001
 From: Wind Yuan <feng.yuan@intel.com>
 Date: Thu, 2 Jan 2014 13:09:15 +0800
 Subject: [PATCH] h264 dec: add more checks from pps for hardware profile

 h264 dec: add more checks from pps for hardware profile

 Baseline profile without constraint_set1_flag = 1, without
 num_slice_groups_minus1 and redundant_pic_cnt_present_flag,
 still can fallback hw profile to constrained-baseline.

Updated for Gstreamer 0.5.8

HSD:206782
---
 gst-libs/gst/vaapi/gstvaapidecoder_h264.c | 12 +++++++-----
 1 file changed, 7 insertions(+), 5 deletions(-)

diff --git a/gst-libs/gst/vaapi/gstvaapidecoder_h264.c b/gst-libs/gst/vaapi/gstvaapidecoder_h264.c
index 94ebae9..97a033c 100644
--- a/gst-libs/gst/vaapi/gstvaapidecoder_h264.c
+++ b/gst-libs/gst/vaapi/gstvaapidecoder_h264.c
@@ -783,7 +783,7 @@ fill_profiles(GstVaapiProfile profiles[16], guint *n_profiles_ptr,
 }

 static GstVaapiProfile
-get_profile(GstVaapiDecoderH264 *decoder, GstH264SPS *sps)
+get_profile(GstVaapiDecoderH264 *decoder, GstH264SPS *sps, GstH264PPS *pps)
 {
     GstVaapiDecoderH264Private * const priv = &decoder->priv;
     GstVaapiDisplay * const display = GST_VAAPI_DECODER_DISPLAY(decoder);
@@ -797,7 +797,9 @@ get_profile(GstVaapiDecoderH264 *decoder, GstH264SPS *sps)
     fill_profiles(profiles, &n_profiles, profile);
     switch (profile) {
     case GST_VAAPI_PROFILE_H264_BASELINE:
-        if (sps->constraint_set1_flag) { // A.2.2 (main profile)
+        if (sps->constraint_set1_flag ||
+            (pps->num_slice_groups_minus1 == 0 &&
+             !pps->redundant_pic_cnt_present_flag)) { // A.2.2 (main profile)
             fill_profiles(profiles, &n_profiles,
                 GST_VAAPI_PROFILE_H264_CONSTRAINED_BASELINE);
             fill_profiles(profiles, &n_profiles,
@@ -827,7 +829,7 @@ get_profile(GstVaapiDecoderH264 *decoder, GstH264SPS *sps)
 }

 static GstVaapiDecoderStatus
-ensure_context(GstVaapiDecoderH264 *decoder, GstH264SPS *sps)
+ensure_context(GstVaapiDecoderH264 *decoder, GstH264SPS *sps, GstH264PPS *pps)
 {
     GstVaapiDecoder * const base_decoder = GST_VAAPI_DECODER_CAST(decoder);
     GstVaapiDecoderH264Private * const priv = &decoder->priv;
@@ -837,7 +839,7 @@ ensure_context(GstVaapiDecoderH264 *decoder, GstH264SPS *sps)
     gboolean reset_context = FALSE;
     guint mb_width, mb_height;
 
-    profile = get_profile(decoder, sps);
+    profile = get_profile(decoder, sps, pps);
     if (!profile) {
         GST_ERROR("unsupported profile_idc %u", sps->profile_idc);
         return GST_VAAPI_DECODER_STATUS_ERROR_UNSUPPORTED_PROFILE;
@@ -2533,7 +2535,7 @@ decode_picture(GstVaapiDecoderH264 *decoder, GstVaapiDecoderUnit *unit)
     GstVaapiPictureH264 *picture;
     GstVaapiDecoderStatus status;
 
-    status = ensure_context(decoder, sps);
+    status = ensure_context(decoder, sps, pps);
     if (status != GST_VAAPI_DECODER_STATUS_SUCCESS)
         return status;
 
--
1.9.3

