commit bcc45b0a01bafa3ad22b2ffad63ff49757d4a366
Author: Dongwon Kim <dongwon.kim@intel.com>
Date:   Tue Oct 21 10:37:09 2014 -0700

    Subject: [PATCH] egl: RGB565 format support for Back-buffer

    Currently format is hardcoded to __DRI_IMAGE_FORMAT_ARGB8888 when buffer or DRI image is allocated
    in function calls, get_back_bo and dri2_get_buffers, no matter what format the current render
    surface has. This problem leads to not only waste of memory space but also incorrect render pitch,
    which may eventually cause wrong offset of a pixel in the buffer.

    This fix makes those two functions to check and use the same format as render surface for objects
    they allocate.

    Signed-off-by: Dongwon Kim <dongwon.kim@intel.com>

diff --git a/src/egl/drivers/dri2/platform_wayland.c b/src/egl/drivers/dri2/platform_wayland.c
index 37dcf19..1e98b60 100644
--- a/src/egl/drivers/dri2/platform_wayland.c
+++ b/src/egl/drivers/dri2/platform_wayland.c
@@ -294,6 +294,11 @@ get_back_bo(struct dri2_egl_surface *dri2_surf)
       dri2_egl_display(dri2_surf->base.Resource.Display);
    int i;

+   /* currently supports two DRI image formats, __DRI_IMAGE_FORMAT_RGB565 or __DRI_IMAGE_FORMAT_ARGB8888,
+    * one of which is selected depending on dri surface format */
+   const unsigned int dri_image_format =
+        (dri2_surf->format == WL_DRM_FORMAT_RGB565) ? __DRI_IMAGE_FORMAT_RGB565 : __DRI_IMAGE_FORMAT_ARGB8888;
+
    /* We always want to throttle to some event (either a frame callback or
     * a sync request) after the commit so that we can be sure the
     * compositor has had a chance to handle it and send us a release event
@@ -323,7 +328,7 @@ get_back_bo(struct dri2_egl_surface *dri2_surf)
          dri2_dpy->image->createImage(dri2_dpy->dri_screen,
                                       dri2_surf->base.Width,
                                       dri2_surf->base.Height,
-                                      __DRI_IMAGE_FORMAT_ARGB8888,
+                                      dri_image_format,
                                       __DRI_IMAGE_USE_SHARE,
                                       NULL);
       dri2_surf->back->age = 0;
@@ -463,9 +468,10 @@ dri2_wl_get_buffers(__DRIdrawable * driDrawable,
                     unsigned int *attachments, int count,
                     int *out_count, void *loaderPrivate)
 {
+   struct dri2_egl_surface *dri2_surf = loaderPrivate;
    unsigned int *attachments_with_format;
    __DRIbuffer *buffer;
-   const unsigned int format = 32;
+   const unsigned int format = (dri2_surf->format == WL_DRM_FORMAT_RGB565) ? 16 : 32;
    int i;

    attachments_with_format = calloc(count * 2, sizeof(unsigned int));
