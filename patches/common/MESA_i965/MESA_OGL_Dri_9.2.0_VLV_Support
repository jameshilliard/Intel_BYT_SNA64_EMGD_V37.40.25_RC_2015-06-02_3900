diff -rupN mesa-9.2-clean/src/egl/drivers/dri2/platform_wayland.c mesa-9.2-rgb565/src/egl/drivers/dri2/platform_wayland.c
--- mesa-9.2-clean/src/egl/drivers/dri2/platform_wayland.c	2013-08-28 06:52:35.000000000 +0800
+++ mesa-9.2-rgb565/src/egl/drivers/dri2/platform_wayland.c	2013-11-26 10:44:12.182382169 +0800
@@ -42,7 +42,8 @@
 
 enum wl_drm_format_flags {
    HAS_ARGB8888 = 1,
-   HAS_XRGB8888 = 2
+   HAS_XRGB8888 = 2,
+   HAS_RGB565 = 4,
 };
 
 static void
@@ -132,7 +133,9 @@ dri2_create_surface(_EGLDriver *drv, _EG
    if (!_eglInitSurface(&dri2_surf->base, disp, type, conf, attrib_list))
       goto cleanup_surf;
 
-   if (conf->AlphaSize == 0)
+   if (conf->RedSize == 5)
+      dri2_surf->format = WL_DRM_FORMAT_RGB565;
+   else if (conf->AlphaSize == 0)
       dri2_surf->format = WL_DRM_FORMAT_XRGB8888;
    else
       dri2_surf->format = WL_DRM_FORMAT_ARGB8888;
@@ -674,6 +677,9 @@ drm_handle_format(void *data, struct wl_
    case WL_DRM_FORMAT_XRGB8888:
       dri2_dpy->formats |= HAS_XRGB8888;
       break;
+   case WL_DRM_FORMAT_RGB565:
+      dri2_dpy->formats |= HAS_RGB565;
+      break;
    }
 }
 
@@ -736,6 +742,7 @@ dri2_initialize_wayland(_EGLDriver *drv,
    static const unsigned int argb_masks[4] =
       { 0xff0000, 0xff00, 0xff, 0xff000000 };
    static const unsigned int rgb_masks[4] = { 0xff0000, 0xff00, 0xff, 0 };
+   static const unsigned int rgb565_masks[4] = { 0xf800, 0x07e0, 0x001f, 0 };
 
    drv->API.CreateWindowSurface = dri2_create_window_surface;
    drv->API.DestroySurface = dri2_destroy_surface;
@@ -817,6 +824,8 @@ dri2_initialize_wayland(_EGLDriver *drv,
 	 dri2_add_config(disp, config, i + 1, 0, types, NULL, rgb_masks);
       if (dri2_dpy->formats & HAS_ARGB8888)
 	 dri2_add_config(disp, config, i + 1, 0, types, NULL, argb_masks);
+      if (dri2_dpy->formats & HAS_RGB565)
+	 dri2_add_config(disp, config, i + 1, 0, types, NULL, rgb565_masks);
    }
 
    disp->Extensions.WL_bind_wayland_display = EGL_TRUE;
diff -rupN mesa-9.2-clean/src/egl/wayland/wayland-drm/wayland-drm.c mesa-9.2-rgb565/src/egl/wayland/wayland-drm/wayland-drm.c
--- mesa-9.2-clean/src/egl/wayland/wayland-drm/wayland-drm.c	2013-08-28 06:52:35.000000000 +0800
+++ mesa-9.2-rgb565/src/egl/wayland/wayland-drm/wayland-drm.c	2013-11-26 10:46:25.359395381 +0800
@@ -125,6 +125,7 @@ drm_create_buffer(struct wl_client *clie
         case WL_DRM_FORMAT_ARGB8888:
         case WL_DRM_FORMAT_XRGB8888:
         case WL_DRM_FORMAT_YUYV:
+	case WL_DRM_FORMAT_RGB565:
                 break;
         default:
                 wl_resource_post_error(resource,
@@ -215,6 +216,8 @@ bind_drm(struct wl_client *client, void
 			       WL_DRM_FORMAT_ARGB8888);
 	wl_resource_post_event(resource, WL_DRM_FORMAT,
 			       WL_DRM_FORMAT_XRGB8888);
+	wl_resource_post_event(resource, WL_DRM_FORMAT,
+			       WL_DRM_FORMAT_RGB565);
         wl_resource_post_event(resource, WL_DRM_FORMAT, WL_DRM_FORMAT_YUV410);
         wl_resource_post_event(resource, WL_DRM_FORMAT, WL_DRM_FORMAT_YUV411);
         wl_resource_post_event(resource, WL_DRM_FORMAT, WL_DRM_FORMAT_YUV420);
diff -rupN mesa-9.2-clean/src/gbm/backends/dri/gbm_dri.c mesa-9.2-rgb565/src/gbm/backends/dri/gbm_dri.c
--- mesa-9.2-clean/src/gbm/backends/dri/gbm_dri.c	2013-08-28 06:52:35.000000000 +0800
+++ mesa-9.2-rgb565/src/gbm/backends/dri/gbm_dri.c	2013-11-26 10:35:26.567330024 +0800
@@ -388,6 +388,9 @@ gbm_dri_bo_import(struct gbm_device *gbm
       case WL_DRM_FORMAT_ARGB8888:
          gbm_format = GBM_FORMAT_ARGB8888;
          break;
+      case WL_DRM_FORMAT_RGB565:
+	 gbm_format = GBM_FORMAT_RGB565;
+	 break;
       case WL_DRM_FORMAT_YUYV:
          gbm_format = GBM_FORMAT_YUYV;
          break;
diff -rupN mesa-9.2-clean/src/mesa/drivers/dri/i965/intel_screen.c mesa-9.2-rgb565/src/mesa/drivers/dri/i965/intel_screen.c
--- mesa-9.2-clean/src/mesa/drivers/dri/i965/intel_screen.c	2013-08-28 06:52:35.000000000 +0800
+++ mesa-9.2-rgb565/src/mesa/drivers/dri/i965/intel_screen.c	2013-11-26 10:37:10.658340350 +0800
@@ -185,6 +185,9 @@ static struct intel_image_format intel_i
    { __DRI_IMAGE_FOURCC_XRGB8888, __DRI_IMAGE_COMPONENTS_RGB, 1,
      { { 0, 0, 0, __DRI_IMAGE_FORMAT_XRGB8888, 4 }, } },
 
+   { __DRI_IMAGE_FOURCC_RGB565, __DRI_IMAGE_COMPONENTS_RGB, 1,
+     { { 0, 0, 0, __DRI_IMAGE_FORMAT_RGB565, 2 } } },
+
    { __DRI_IMAGE_FOURCC_YUV410, __DRI_IMAGE_COMPONENTS_Y_U_V, 3,
      { { 0, 0, 0, __DRI_IMAGE_FORMAT_R8, 1 },
        { 1, 2, 2, __DRI_IMAGE_FORMAT_R8, 1 },
