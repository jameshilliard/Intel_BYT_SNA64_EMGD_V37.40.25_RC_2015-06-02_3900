From 727a5755de8c207754a9ba09c81b662f75196173 Mon Sep 17 00:00:00 2001
From: Dongwon Kim <dongwon.kim@intel.com>
Date: Mon, 21 Jul 2014 15:38:36 -0700
Subject: [PATCH] [PATCH] egl: RGB565 format support for Back-buffer

Currently format is hardcoded to __DRI_IMAGE_FORMAT_ARGB8888 when buffer or DRI image is allocated
in function calls, get_back_bo and dri2_get_buffers, no matter what format the current render
surface has. This problem leads to not only waste of memory space but also incorrect render pitch,
which may eventually cause wrong offset of a pixel in the buffer.

This fix makes those two functions to check and use the same format as render surface for objects
they allocate.
---
 src/egl/drivers/dri2/platform_wayland.c |    9 +++++++--
 1 file changed, 7 insertions(+), 2 deletions(-)

diff --git a/src/egl/drivers/dri2/platform_wayland.c b/src/egl/drivers/dri2/platform_wayland.c
index 43e8f4b..a3adf64 100644
--- a/src/egl/drivers/dri2/platform_wayland.c
+++ b/src/egl/drivers/dri2/platform_wayland.c
@@ -263,6 +263,10 @@ get_back_bo(struct dri2_egl_surface *dri2_surf)
       dri2_egl_display(dri2_surf->base.Resource.Display);
    int i;

+   /* currently supports two DRI image formats, __DRI_IMAGE_FORMAT_RGB565 or __DRI_IMAGE_FORMAT_ARGB8888,
+    * one of which is selected depending on dri surface format */
+   const unsigned int dri_image_format =
+	(dri2_surf->format == WL_DRM_FORMAT_RGB565) ? __DRI_IMAGE_FORMAT_RGB565 : __DRI_IMAGE_FORMAT_ARGB8888;	
    /* There might be a buffer release already queued that wasn't processed */
    wl_display_dispatch_queue_pending(dri2_dpy->wl_dpy, dri2_dpy->wl_queue);

@@ -286,7 +290,7 @@ get_back_bo(struct dri2_egl_surface *dri2_surf)
          dri2_dpy->image->createImage(dri2_dpy->dri_screen,
                                       dri2_surf->base.Width,
                                       dri2_surf->base.Height,
-                                      __DRI_IMAGE_FORMAT_ARGB8888,
+                                      dri_image_format,
                                       __DRI_IMAGE_USE_SHARE,
                                       NULL);
       dri2_surf->back->age = 0;
@@ -426,9 +430,10 @@ dri2_get_buffers(__DRIdrawable * driDrawable,
		 unsigned int *attachments, int count,
		 int *out_count, void *loaderPrivate)
 {
+   struct dri2_egl_surface *dri2_surf = loaderPrivate;
    unsigned int *attachments_with_format;
    __DRIbuffer *buffer;
-   const unsigned int format = 32;
+   const unsigned int format = (dri2_surf->format == WL_DRM_FORMAT_RGB565) ? 16 : 32;
    int i;

    attachments_with_format = calloc(count * 2, sizeof(unsigned int));
--
1.7.9.5

